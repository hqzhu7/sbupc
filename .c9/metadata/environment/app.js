{"changed":true,"filter":false,"title":"app.js","tooltip":"/app.js","value":"var express = require(\"express\");\nvar app=express();\nvar ejs = require('ejs');\nvar bodyParser = require(\"body-parser\")\nvar passport = require(\"passport\");\nvar LocalStrategy = require('passport-local').Strategy;\nvar flash = require('connect-flash-plus');\n\nvar connection = require(\"./modules/database\");\n\nvar customerId;\nvar price;\nvar pName;\n\napp.use(express.static('public'));\napp.use(bodyParser.urlencoded({extended:true}));\napp.set('view engine', 'ejs');\napp.use(require('express-session')({\n    secret:\"sbupc\",\n    resave:false,\n    saveUnitialized:true\n}));\napp.use(passport.initialize());\napp.use(passport.session());\napp.use(flash());\n\n\npassport.serializeUser(function(user, done) {\n  customerId=user.customerID;\n  done(null, user.customerID);\n});\n\npassport.deserializeUser(function(id, done) {\n    connection.query(\"select * from Customer where customerID =\"+id,function(err,rows){\n            done(err, rows[0]);\n    });\n});\n\npassport.use('local-login', new LocalStrategy({\n        // by default, local strategy uses username and password, we will override with email\n        usernameField : 'getEmail',\n        passwordField : 'getPwd',\n        passReqToCallback : true // allows us to pass back the entire request to the callback\n    },\n    function(request, email, pwd, done) { // callback with email and password from our form\n\n         connection.query(\"SELECT * FROM Customer WHERE `email` = '\" + email + \"'\",function(err,rows){\n            if (err)\n                return done(err);\n             if (!rows.length) {\n                return done(null, false, request.flash('loginMessage', 'No user found.')); // req.flash is the way to set flashdata using connect-flash\n            } \n            \n            // if the user is found but the password is wrong\n            if (!( rows[0].pwd == pwd)){\n                return done(null, false, request.flash('loginMessage', 'Oops! Wrong password.')); // create the loginMessage and save it to session as flashdata\n            }\n            \n            // all is well, return successful user\n            return done(null, rows[0]);         \n        \n        });\n}));\n\n\napp.post(\"/login\",passport.authenticate('local-login',{\n    successRedirect:\"/\",\n    failureRedirect:\"/register\"\n    }),function(request,respon){\n    \n});\n\n\napp.get(\"/logout\", function(request,respon){\n    request.logout();\n    respon.redirect(\"/\")\n})\n\napp.get(\"/\",function(request,respon){\n    var isLogged = request.isAuthenticated();\n    respon.render(\"index\",{isLogged:isLogged});\n})\n\napp.get(\"/product/:proName\",function(request,respon){\n    var name = request.params.proName;\n    respon.render(name);\n})\n\napp.get(\"/register\",function(request,respon){\n    respon.render(\"register\",{message: request.flash('loginMessage')});\n})\n\napp.get(\"/buy/:price/:proName\",isLoggedIn,function(request,respon){\n    price = request.params.price;\n    pName = request.params.proName;\n    respon.render(\"buy\",{name:pName,price:price});\n})\n\n\napp.post(\"/singup\", function(req,res)\n{\n    var email=req.body.getEmail;\n    var pwd=req.body.getPwd;\n    var firstName = req.body.getFirstName;\n    var lastName = req.body.getLastName;\n    var address = req.body.getAddress;\n    var address2 = req.body.getAddress2;\n    var city = req.body.getCity;\n    var zip = req.body.getZip;\n    var state = req.body.getState;\n    \n   turnOffAutoCommit();\n    var sql = 'INSERT INTO Customer(firstName,lastName,email,pwd,address,address2,city,zipCode,state) VALUES (\"'+ firstName + '\",\"' + lastName + '\",\"' + email \n                                    + '\",\"' + pwd + '\",\"' + address + '\",\"'+address2+'\",\"'+city+'\",\"'+zip+'\",\"'+state+'\")';\n    connection.query(sql,function (err, result) \n    {\n\n        if (err) \n        {\n            console.log(\"i know its duplicated, rollbacked\");  //if duplicate code = ER_DUP_ENTRY\n            console.log(err);\n            req.flash('signupM','Sign up failed!!,try again');\n            roback();\n            res.render('register',{message: req.flash('signupM')});\n            \n        }\n        else{\n            console.log(\"1 record inserted\");\n            commitQuery();\n            req.flash('signupM','sign success');\n            res.render('register',{message: req.flash('signupM')});\n        }\n    });\n    \n})\n\napp.post(\"/checkout\", function(req,res){   \n    //close autocommit\n    turnOffAutoCommit();\n\n    var cardNumber = req.body.getCardNumber;\n    var year = req.body.getYear;\n    var month = req.body.getMonth;\n    var sql = 'INSERT INTO payment(cardNumber, year1, month1, price,proName) VALUES (\"'+ cardNumber + '\",\"' + year + '\",\"' + month +'\",' + price +',\"'+ pName+ '\")';\n    connection.query(sql,function (err, result) \n    {\n        if (err)    //rollback\n        {\n            console.log(err);  //if duplicate code = ER_DUP_ENTRY\n            roback();\n\n            res.end('Invalid message, please try it again.');\n            return;\n        }\n        else        \n        {\n            console.log(\"1 record inserted1\");\n        }\n    });\n\n    connection.query(\"select * from payment order by paymentID desc limit 1\",function(err,result){\n        if(err){\n            console.log(err)\n        }\n        else{\n            var pid = result[0].paymentID;\n\n            var firstName = req.body.getCardNumber;\n            var lastName = req.body.getLastName;\n            var address = req.body.getAddress;\n            var state = req.body.getState;\n            var city = req.body.getCity;\n            var zipCode = req.body.getZipCode;\n            var sql1 = 'INSERT INTO shipment(firstName, lastName, address, state, city, zipCode) VALUES (\"'+ firstName + '\",\"' + lastName + '\",\"' + address + '\",\"' + state + '\",\"' + city + '\",\"' + zipCode + '\")';\n\n            connection.query(sql1,function (err, result) \n            {\n                if (err)    //rollback\n                {\n                    roback();\n                    res.end('Invalid message, please try it again.');\n                    return;\n                }\n                else        \n                    console.log(\"1 record inserted2\");\n            });\n             connection.query(\"select * from shipment order by shipmentID desc limit 1\",function(err,result){\n                    if(err){\n                        console.log(err)\n                    }else{\n                        var sid = result[0].shipmentID;\n                        console.log(pName);\n                        var sql2= 'INSERT INTO OrderBy(CustomerID, PaymentID, ShipmentID, itemName) VALUES ('+ customerId + ',' + pid + ',' + sid +',\"'+pName+'\")';\n                        connection.query(sql2,function (err, result) \n                        {\n                            if (err)    //rollback\n                            {\n                                console.log(err);  //if duplicate code = ER_DUP_ENTRY\n                                roback();\n                                res.end('Invalid message, please try it again.');\n                                return;\n                            }\n                            else        \n                            {\n                                console.log(\"1 record inserted3\");\n\n                                commitQuery();\n                            }\n                        });\n                    }\n             });\n        }\n    });\n    res.redirect(\"/\");\n});\n\n\napp.post(\"/search\",function(request,respon){\n    var searchFor=request.body.getSearch;\n    var sql='SELECT itemName FROM item where itemName like \"%' +searchFor +'%\" OR typeOfItem like \"%'+searchFor+ '%\"';\n    connection.query(sql,function(err,result){\n        if (err)   \n            console.log(err);  \n        else\n            respon.render(\"searchReturn\",{result:result});  \n        \n    });\n \n });\n\n\napp.get(\"/cart/:productN\",isLoggedIn,function(request,res){\n    var pn = request.params.productN;\n    var sql0 = 'select Quantity from cart where proName =\"'+pn+'\" AND CustomerID='+customerId;\n    turnOffAutoCommit();\n    connection.query(sql0,function(err,result){\n        if(err)\n            console.log(\"i know!\");\n        else{\n            if(result.length==0){\n            var sql= 'INSERT INTO cart(CustomerID, proName) VALUES ('+ customerId + ',' + '\"' + pn + '\")';\n                connection.query(sql,function(err,result){\n                    if(err) {\n                        console.log(\"i know!\");\n                         roback();\n                    }\n                    else{\n                        console.log(\"inerst cart success\");\n                        commitQuery();\n                    }\n                });\n            }else{\n                connection.query('UPDATE cart SET Quantity = Quantity + 1 WHERE proName =\"'+pn+'\" AND CustomerID='+customerId,function(err,result){\n\n                    if(err) {\n                     console.log(\"i know!\");\n                     roback();\n                    }\n                    else{\n                      console.log(\"update cart success\");\n                      commitQuery();\n                    }\n                });\n            }\n        }\n    }); \n\n    res.redirect(\"/shoppingcart\");\n\n    \n});\n\nvar totalprice1=0;\napp.get(\"/shoppingcart\",function(req,res){\n    var sql='SELECT c.proName, c.Quantity, i.price from cart as c inner join item as i on c.proName=i.itemName where c.CustomerID='+customerId;\n    connection.query(sql,function(err,result){\n        if(err)    \n            console.log(err);  \n        else{\n            var sql1 = 'select sum(total) as tp from (select Quantity*price as total from cart as c inner join item as i on c.proName = i.itemName where CustomerID = '+customerId+') as totaltable;';\n            connection.query(sql1,function(err1,result1){\n                if(err1)    \n                    console.log(err1);  \n                else{\n                    if(result.length==0)\n                        res.render(\"cart\",{result:result,totalprice:0.00,message:''});\n                    else{\n                        totalprice1=result1[0].tp;\n                        res.render(\"cart\",{result:result,totalprice:result1[0].tp,message:''});  \n                    }\n                }\n            });        \n        }\n    });\n\n});\n\napp.post(\"/updateCart/:product\",function(req,res){\n        var product = req.params.product;\n        var quantity=req.body.getValue;\n        turnOffAutoCommit();\n        if(quantity>0){\n        var sql = 'update cart set quantity ='+quantity+' where proName=\"'+product+'\"'+' AND '+'CustomerID='+customerId;\n        connection.query(sql,function(err,result){\n            if(err){\n                console.log(err)\n                roback();\n            }else{\n                console.log(\"quantity set success\");\n            commitQuery();\n            }\n        })}else if(quantity==0){\n            var sql = 'delete from cart where proName=\"'+product+'\"'+' AND '+'CustomerID='+customerId;\n            connection.query(sql,function(err,result){\n                if(err){\n                    console.log(err)\n                    roback();\n                }else{\n                    console.log(\"remove set success\");\n                    commitQuery();\n            }\n\n            });\n        }\n        res.redirect('/shoppingcart');\n\n});\n\n\napp.get(\"/buyAll\",function(request,respon){\n    var sql = 'SELECT * FROM cart where CustomerID='+customerId;\n    connection.query(sql,function(err, result) {\n        if(err)\n            console.log(err);\n        else{\n            if(result.length==0){\n                request.flash('checkOutError','Nothing to Check Out');\n                respon.render(\"cart\",{result:'',totalprice:0.00,message: request.flash('checkOutError')}); \n            }else{\n                respon.render(\"buyAll\",{price:totalprice1});    \n            }\n        }\n    });\n});\n\napp.post(\"/checkoutAll\", function(req,res){   \n    //close autocommit\n    turnOffAutoCommit();\n\n    var cardNumber = req.body.getCardNumber;\n    var year = req.body.getYear;\n    var month = req.body.getMonth;\n    var sql = 'INSERT INTO payment(cardNumber, year1, month1, price,proName) VALUES (\"'+ cardNumber + '\",\"' + year + '\",\"' + month +'\",' + totalprice1 +',\"'+ pName+ '\")';\n    connection.query(sql,function (err, result) \n    {\n        if (err)    //rollback\n        {\n            console.log(err);  //if duplicate code = ER_DUP_ENTRY\n            roback();\n\n            res.end('Invalid message, please try it again.');\n            return;\n        }\n        else        \n        {\n            console.log(\"1 record inserted1\");\n        }\n    });\n\n    connection.query(\"select * from payment order by paymentID desc limit 1\",function(err,result){\n        if(err){\n            console.log(err)\n        }\n        else{\n            var pid = result[0].paymentID;\n\n            var firstName = req.body.getCardNumber;\n            var lastName = req.body.getLastName;\n            var address = req.body.getAddress;\n            var state = req.body.getState;\n            var city = req.body.getCity;\n            var zipCode = req.body.getZipCode;\n            var sql1 = 'INSERT INTO shipment(firstName, lastName, address, state, city, zipCode) VALUES (\"'+ firstName + '\",\"' + lastName + '\",\"' + address + '\",\"' + state + '\",\"' + city + '\",\"' + zipCode + '\")';\n\n            connection.query(sql1,function (err, result) \n            {\n                if (err)    //rollback\n                {\n                    roback();\n                    res.end('Invalid message, please try it again.');\n                    return;\n                }\n                else        \n                    console.log(\"1 record inserted2\");\n            });\n             connection.query(\"select * from shipment order by shipmentID desc limit 1\",function(err,result){\n                    if(err){\n                        console.log(err)\n                    }else{\n                        var sid = result[0].shipmentID;\n                        var sql2= 'INSERT INTO OrderBy(CustomerID, PaymentID, ShipmentID, itemName) VALUES ('+ customerId + ',' + pid + ',' + sid +','+'\"cart\"'+')';\n                        connection.query(sql2,function (err, result) \n                        {\n                            if (err)    //rollback\n                            {\n                                console.log(err);  //if duplicate code = ER_DUP_ENTRY\n                                roback();\n                                res.end('Invalid message, please try it again.');\n                                return;\n                            }\n                            else        \n                            {\n                                console.log(\"1 record inserted3\");\n                            }\n                        });\n                    }\n             });\n        }\n    });\n    var orderNo1 = 0;\n    connection.query(\"SELECT OrderNo FROM OrderBy order by OrderNo desc limit 1\",function(err, result) {\n        if(err){\n            roback();\n            return;\n        }else{\n            orderNo1 = result[0].OrderNo;\n        }\n    });\n    \n    var sql3 = 'SELECT proName FROM cart where CustomerID = '+customerId;\n    connection.query(\"SELECT * FROM cart\",function(err,result){\n        if(err){\n            console.log(err);\n            roback();\n        }\n        else{\n            result.forEach(function(r){\n                var sql4 = 'INSERT INTO checkCart VALUES('+orderNo1+',\"'+r.proName+'\")';\n                connection.query(sql4,function(err, rows) {\n                    if(err)\n                    {\n                        roback();\n                        return;\n                    }else{\n                        console.log(\"order placed\");\n                    }\n                });\n            });\n        }\n    });\n    \n    var sql5 = 'DELETE FROM cart WHERE CustomerID='+customerId;\n    connection.query(sql5,function(err,result){\n       if(err){\n           roback();\n           return;\n       }else{\n           totalprice1=0;\n           commitQuery();\n       }\n        \n    });\n\n    res.redirect(\"/\");\n});\n\n\n\n\n//THESE ARE HELPER FUNCTIONS\n    function turnOffAutoCommit(){\n    var sql_close_autoCommit = \"SET autocommit = 0\";\n    connection.query(sql_close_autoCommit,function (err, result) \n    {\n        if (err) \n        {\n            console.log(err);  //if duplicate code = ER_DUP_ENTRY\n        }\n        else\n            console.log(\"has closed autocommit\");\n    });\n    }\n\n\n    function roback(){\n        connection.query(\"rollback\",function (err, result) \n        {\n            if (err)    //rollback\n                console.log(err);  //if duplicate code = ER_DUP_ENTRY\n            else        \n                console.log(\"has rolled back\");\n        });\n\n    }\n\n\n    function commitQuery(){\n\n        connection.query(\"commit\",function (err, result) \n        {\n            if (err)    //rollback\n                console.log(err);  //if duplicate code = ER_DUP_ENTRY\n            else        \n                console.log(\"has commited\");\n        });\n    }\n\n\n    function isLoggedIn(request,respon,next){\n    if(request.isAuthenticated())\n            return next();\n       respon.redirect(\"/register\");\n\n    }\n\napp.listen(8080, '0.0.0.0');\n\n\n\n\n","undoManager":{"mark":98,"position":100,"stack":[[{"start":{"row":333,"column":56},"end":{"row":333,"column":57},"action":"insert","lines":["k"],"id":2693}],[{"start":{"row":333,"column":57},"end":{"row":333,"column":58},"action":"insert","lines":[" "],"id":2694}],[{"start":{"row":333,"column":58},"end":{"row":333,"column":59},"action":"insert","lines":["O"],"id":2695}],[{"start":{"row":333,"column":59},"end":{"row":333,"column":60},"action":"insert","lines":["U"],"id":2696}],[{"start":{"row":333,"column":59},"end":{"row":333,"column":60},"action":"remove","lines":["U"],"id":2697}],[{"start":{"row":333,"column":59},"end":{"row":333,"column":60},"action":"insert","lines":["u"],"id":2698}],[{"start":{"row":333,"column":60},"end":{"row":333,"column":61},"action":"insert","lines":["t"],"id":2699}],[{"start":{"row":333,"column":37},"end":{"row":333,"column":38},"action":"remove","lines":["M"],"id":2700}],[{"start":{"row":333,"column":36},"end":{"row":333,"column":37},"action":"remove","lines":["p"],"id":2701}],[{"start":{"row":333,"column":35},"end":{"row":333,"column":36},"action":"remove","lines":["u"],"id":2702}],[{"start":{"row":333,"column":34},"end":{"row":333,"column":35},"action":"remove","lines":["n"],"id":2703}],[{"start":{"row":333,"column":33},"end":{"row":333,"column":34},"action":"remove","lines":["g"],"id":2704}],[{"start":{"row":333,"column":32},"end":{"row":333,"column":33},"action":"remove","lines":["i"],"id":2705}],[{"start":{"row":333,"column":31},"end":{"row":333,"column":32},"action":"remove","lines":["s"],"id":2706}],[{"start":{"row":333,"column":31},"end":{"row":333,"column":32},"action":"insert","lines":["c"],"id":2707}],[{"start":{"row":333,"column":32},"end":{"row":333,"column":33},"action":"insert","lines":["h"],"id":2708}],[{"start":{"row":333,"column":33},"end":{"row":333,"column":34},"action":"insert","lines":["e"],"id":2709}],[{"start":{"row":333,"column":34},"end":{"row":333,"column":35},"action":"insert","lines":["c"],"id":2710}],[{"start":{"row":333,"column":35},"end":{"row":333,"column":36},"action":"insert","lines":["k"],"id":2711}],[{"start":{"row":333,"column":36},"end":{"row":333,"column":37},"action":"insert","lines":["O"],"id":2712}],[{"start":{"row":333,"column":37},"end":{"row":333,"column":38},"action":"insert","lines":["u"],"id":2713}],[{"start":{"row":333,"column":38},"end":{"row":333,"column":39},"action":"insert","lines":["t"],"id":2714}],[{"start":{"row":333,"column":39},"end":{"row":333,"column":40},"action":"insert","lines":[" "],"id":2715}],[{"start":{"row":333,"column":39},"end":{"row":333,"column":40},"action":"remove","lines":[" "],"id":2716}],[{"start":{"row":333,"column":39},"end":{"row":333,"column":40},"action":"insert","lines":["E"],"id":2717}],[{"start":{"row":333,"column":40},"end":{"row":333,"column":41},"action":"insert","lines":["r"],"id":2718}],[{"start":{"row":333,"column":41},"end":{"row":333,"column":42},"action":"insert","lines":["r"],"id":2719}],[{"start":{"row":333,"column":42},"end":{"row":333,"column":43},"action":"insert","lines":["o"],"id":2720}],[{"start":{"row":333,"column":43},"end":{"row":333,"column":44},"action":"insert","lines":["r"],"id":2721}],[{"start":{"row":334,"column":62},"end":{"row":334,"column":69},"action":"remove","lines":["signupM"],"id":2722},{"start":{"row":334,"column":62},"end":{"row":334,"column":75},"action":"insert","lines":["checkOutError"]}],[{"start":{"row":335,"column":1},"end":{"row":335,"column":2},"action":"remove","lines":[" "],"id":2723}],[{"start":{"row":335,"column":0},"end":{"row":335,"column":1},"action":"remove","lines":[" "],"id":2724}],[{"start":{"row":334,"column":81},"end":{"row":335,"column":14},"action":"remove","lines":["","              "],"id":2725}],[{"start":{"row":334,"column":16},"end":{"row":334,"column":36},"action":"remove","lines":["respon.render(\"cart\""],"id":2726},{"start":{"row":334,"column":16},"end":{"row":334,"column":36},"action":"insert","lines":["respon.render(\"cart\""]}],[{"start":{"row":286,"column":77},"end":{"row":286,"column":78},"action":"insert","lines":[","],"id":2727}],[{"start":{"row":286,"column":78},"end":{"row":286,"column":79},"action":"insert","lines":["m"],"id":2728}],[{"start":{"row":286,"column":79},"end":{"row":286,"column":80},"action":"insert","lines":["e"],"id":2729}],[{"start":{"row":286,"column":80},"end":{"row":286,"column":81},"action":"insert","lines":["s"],"id":2730}],[{"start":{"row":286,"column":81},"end":{"row":286,"column":82},"action":"insert","lines":["s"],"id":2731}],[{"start":{"row":286,"column":82},"end":{"row":286,"column":83},"action":"insert","lines":["a"],"id":2732}],[{"start":{"row":286,"column":83},"end":{"row":286,"column":84},"action":"insert","lines":["g"],"id":2733}],[{"start":{"row":286,"column":84},"end":{"row":286,"column":85},"action":"insert","lines":["e"],"id":2734}],[{"start":{"row":286,"column":85},"end":{"row":286,"column":86},"action":"insert","lines":[":"],"id":2735}],[{"start":{"row":286,"column":86},"end":{"row":286,"column":88},"action":"insert","lines":["''"],"id":2736}],[{"start":{"row":284,"column":21},"end":{"row":285,"column":0},"action":"insert","lines":["",""],"id":2737},{"start":{"row":285,"column":0},"end":{"row":285,"column":20},"action":"insert","lines":["                    "]}],[{"start":{"row":285,"column":20},"end":{"row":285,"column":21},"action":"insert","lines":["i"],"id":2738}],[{"start":{"row":285,"column":21},"end":{"row":285,"column":22},"action":"insert","lines":["f"],"id":2739}],[{"start":{"row":285,"column":22},"end":{"row":285,"column":24},"action":"insert","lines":["()"],"id":2740}],[{"start":{"row":285,"column":23},"end":{"row":285,"column":24},"action":"insert","lines":["r"],"id":2741}],[{"start":{"row":285,"column":24},"end":{"row":285,"column":25},"action":"insert","lines":["e"],"id":2742}],[{"start":{"row":285,"column":25},"end":{"row":285,"column":26},"action":"insert","lines":["s"],"id":2743}],[{"start":{"row":285,"column":26},"end":{"row":285,"column":27},"action":"insert","lines":["u"],"id":2744}],[{"start":{"row":285,"column":27},"end":{"row":285,"column":28},"action":"insert","lines":["l"],"id":2745}],[{"start":{"row":285,"column":28},"end":{"row":285,"column":29},"action":"insert","lines":["t"],"id":2746}],[{"start":{"row":285,"column":29},"end":{"row":285,"column":30},"action":"insert","lines":["."],"id":2747}],[{"start":{"row":285,"column":30},"end":{"row":285,"column":31},"action":"insert","lines":["l"],"id":2748}],[{"start":{"row":285,"column":31},"end":{"row":285,"column":32},"action":"insert","lines":["e"],"id":2749}],[{"start":{"row":285,"column":32},"end":{"row":285,"column":33},"action":"insert","lines":["n"],"id":2750}],[{"start":{"row":285,"column":33},"end":{"row":285,"column":34},"action":"insert","lines":["g"],"id":2751}],[{"start":{"row":285,"column":30},"end":{"row":285,"column":34},"action":"remove","lines":["leng"],"id":2752},{"start":{"row":285,"column":30},"end":{"row":285,"column":36},"action":"insert","lines":["length"]}],[{"start":{"row":285,"column":36},"end":{"row":285,"column":37},"action":"insert","lines":["!"],"id":2753}],[{"start":{"row":285,"column":37},"end":{"row":285,"column":38},"action":"insert","lines":["="],"id":2754}],[{"start":{"row":285,"column":37},"end":{"row":285,"column":38},"action":"remove","lines":["="],"id":2755}],[{"start":{"row":285,"column":36},"end":{"row":285,"column":37},"action":"remove","lines":["!"],"id":2756}],[{"start":{"row":285,"column":36},"end":{"row":285,"column":37},"action":"insert","lines":["="],"id":2757}],[{"start":{"row":285,"column":37},"end":{"row":285,"column":38},"action":"insert","lines":["="],"id":2758}],[{"start":{"row":285,"column":38},"end":{"row":285,"column":39},"action":"insert","lines":["0"],"id":2759}],[{"start":{"row":285,"column":40},"end":{"row":286,"column":0},"action":"insert","lines":["",""],"id":2760},{"start":{"row":286,"column":0},"end":{"row":286,"column":20},"action":"insert","lines":["                    "]}],[{"start":{"row":286,"column":20},"end":{"row":286,"column":24},"action":"insert","lines":["    "],"id":2761}],[{"start":{"row":286,"column":24},"end":{"row":286,"column":95},"action":"insert","lines":["res.render(\"cart\",{result:result,totalprice:result1[0].tp,message:''});"],"id":2762}],[{"start":{"row":286,"column":68},"end":{"row":286,"column":81},"action":"remove","lines":["result1[0].tp"],"id":2763},{"start":{"row":286,"column":68},"end":{"row":286,"column":69},"action":"insert","lines":["0"]}],[{"start":{"row":286,"column":69},"end":{"row":286,"column":70},"action":"insert","lines":["."],"id":2764}],[{"start":{"row":286,"column":70},"end":{"row":286,"column":71},"action":"insert","lines":["0"],"id":2765}],[{"start":{"row":286,"column":71},"end":{"row":286,"column":72},"action":"insert","lines":["0"],"id":2766}],[{"start":{"row":286,"column":86},"end":{"row":287,"column":0},"action":"insert","lines":["",""],"id":2767},{"start":{"row":287,"column":0},"end":{"row":287,"column":24},"action":"insert","lines":["                        "]}],[{"start":{"row":287,"column":20},"end":{"row":287,"column":24},"action":"remove","lines":["    "],"id":2768}],[{"start":{"row":287,"column":20},"end":{"row":287,"column":21},"action":"insert","lines":["e"],"id":2769}],[{"start":{"row":287,"column":21},"end":{"row":287,"column":22},"action":"insert","lines":["l"],"id":2770}],[{"start":{"row":287,"column":22},"end":{"row":287,"column":23},"action":"insert","lines":["s"],"id":2771}],[{"start":{"row":287,"column":23},"end":{"row":287,"column":24},"action":"insert","lines":["e"],"id":2772}],[{"start":{"row":287,"column":24},"end":{"row":287,"column":25},"action":"insert","lines":["{"],"id":2773}],[{"start":{"row":289,"column":93},"end":{"row":290,"column":0},"action":"insert","lines":["",""],"id":2774},{"start":{"row":290,"column":0},"end":{"row":290,"column":20},"action":"insert","lines":["                    "]}],[{"start":{"row":290,"column":20},"end":{"row":290,"column":21},"action":"insert","lines":["}"],"id":2775}],[{"start":{"row":288,"column":20},"end":{"row":288,"column":24},"action":"insert","lines":["    "],"id":2776}],[{"start":{"row":289,"column":20},"end":{"row":289,"column":24},"action":"insert","lines":["    "],"id":2777}],[{"start":{"row":338,"column":38},"end":{"row":338,"column":67},"action":"insert","lines":["result:result,totalprice:0.00"],"id":2778}],[{"start":{"row":338,"column":50},"end":{"row":338,"column":51},"action":"remove","lines":["t"],"id":2779}],[{"start":{"row":338,"column":49},"end":{"row":338,"column":50},"action":"remove","lines":["l"],"id":2780}],[{"start":{"row":338,"column":48},"end":{"row":338,"column":49},"action":"remove","lines":["u"],"id":2781}],[{"start":{"row":338,"column":47},"end":{"row":338,"column":48},"action":"remove","lines":["s"],"id":2782}],[{"start":{"row":338,"column":46},"end":{"row":338,"column":47},"action":"remove","lines":["e"],"id":2783}],[{"start":{"row":338,"column":45},"end":{"row":338,"column":46},"action":"remove","lines":["r"],"id":2784}],[{"start":{"row":338,"column":45},"end":{"row":338,"column":47},"action":"insert","lines":["''"],"id":2785}],[{"start":{"row":338,"column":63},"end":{"row":338,"column":64},"action":"insert","lines":[","],"id":2786}],[{"start":{"row":220,"column":32},"end":{"row":220,"column":33},"action":"remove","lines":["l"],"id":2787}],[{"start":{"row":220,"column":31},"end":{"row":220,"column":32},"action":"remove","lines":["r"],"id":2788}],[{"start":{"row":220,"column":30},"end":{"row":220,"column":31},"action":"remove","lines":["u"],"id":2789}],[{"start":{"row":220,"column":29},"end":{"row":220,"column":30},"action":"remove","lines":[" "],"id":2790}],[{"start":{"row":220,"column":28},"end":{"row":220,"column":29},"action":"remove","lines":[","],"id":2791}],[{"start":{"row":13,"column":0},"end":{"row":13,"column":57},"action":"remove","lines":["/////////////////////////////////////////////////////////"],"id":2792}],[{"start":{"row":12,"column":10},"end":{"row":13,"column":0},"action":"remove","lines":["",""],"id":2793}]]},"ace":{"folds":[],"scrolltop":8154.5,"scrollleft":0,"selection":{"start":{"row":516,"column":0},"end":{"row":516,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":508,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1521167465139}